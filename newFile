 public UserInfoDTO getUserInfoDetail(String vzid, UUID uuid) throws Exception {
        Instant start = Instant.now();
        HttpHeaders headers = new HttpHeaders();
        headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
        HttpEntity<UserInfoDTO> entity = new HttpEntity<>(null, headers);
        String uri = appProperties.getUserInforDetail();
        String targetUri = uri.replace("{vzid}", vzid);
        ResponseEntity<UserInfoDTO> response = null;
        try {
            LOGGER.info("getUserInfoDetail:: before calling url={} to fetch user details  getUserInforDetail={}, uuid={}", appProperties.getUserInforDetail(), uuid);
            response = restTemplate.exchange(targetUri, HttpMethod.GET, entity, UserInfoDTO.class);
            Instant end = Instant.now();
            LOGGER.info("getUserInfoDetail: after call occurred to url={}, parsing_response_object={}, response_code={}, time_taken={}, uuid={}", appProperties.getUserInforDetail(), response.getBody(), response.getStatusCode(), Duration.between(start, end).toMillis(), uuid);
            if (response.getStatusCode().value() == 200) {
                return response.getBody();
            }
        } catch (Exception e) {
            LOGGER.error("getUserInfoDetail:: exception occurred while trying to fetch user name. Exception={},{}, uuid={}", e.getStackTrace(), e.getMessage(), uuid);
        }
        return null;
    }
}
https://kirke-dev.ebiz.verizon.com/api/userInfo?username={vzid}
