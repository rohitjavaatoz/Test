    @RequestMapping(value = "/email-messages/{emailMessageId}/labels", produces = { "application/json" }, method = RequestMethod.PATCH)
 public ResponseEntity<ModelApiResponse> setEmailMessageLabels(Integer id, UUID uuid) {
        LOGGER.info("setEmailMessageLabels: Assigning Labels for the email message id {}:UUID={}",id,uuid);
        ModelApiResponse modelApiResponse = new ModelApiResponse();
        try {
            List<EmailMessageLabelsEntity> emailMessageLabelsEntityResponse = emailMessageLabelService.assignLabelNamestoEmail(id, uuid);
            LOGGER.info("setEmailMessageLabels: Labels was created for Email Message Id {},labels={}:UUID={}",id, emailMessageLabelsEntityResponse,uuid);
            modelApiResponse.setMessage("Labels was created for Email Message Id");
        }
        catch(Exception e){
            LOGGER.info("setEmailMessageLabels:Error While creating Message Labels of Email Message Id {},Error={}:UUID={}",id,e,uuid);
            modelApiResponse.code(400);
            modelApiResponse.message("Error while updating the email message");
            return new ResponseEntity<>(modelApiResponse, HttpStatus.BAD_REQUEST);
        }
        modelApiResponse.setCode(201);
        return new ResponseEntity<>(modelApiResponse, HttpStatus.CREATED);
    }
