	@RequestMapping(value = "/email-messages/search", produces = {"application/json"}, consumes = {"application/json"}, method = RequestMethod.POST)
public ResponseEntity<Set<MailMessageDTO>> getEmailSearch(EmailSearchRequestDTO body, UUID uuid){
		Set<MailMessageDTO> emailList = new HashSet<MailMessageDTO>();
		ResponseEntity<Set<MailMessageDTO>> emailDetails = new ResponseEntity<>(new HashSet<MailMessageDTO>(), HttpStatus.OK);
		LOGGER.info("getEmailSearch: Fetching the Emails list by given input {} : UUID ={}",body,uuid);
		try {
			Set<Integer> emailExtractionIds = emailMessageExtractionService.getEmailExtractionIds(body, uuid);
			Set<Integer> emailIds = emailMessagesService.getEmailMessageIds(body, emailExtractionIds, uuid);
			LOGGER.info("getEmailSearch: Updated the EmailIds List {} : UUID ={}", emailIds, uuid);
			if (null != emailIds && !emailIds.isEmpty())
				emailList.addAll(emailMessagesService.getMatchedEmails(emailIds, body, uuid));
		}
		catch(Exception e){
			LOGGER.info("getEmailSearch: Error while retrieving the EmailList  : e={}, UUID ={}",e,uuid);
			emailDetails.getStatusCode().is4xxClientError();
			return new ResponseEntity<>(new HashSet<MailMessageDTO>(), HttpStatus.BAD_REQUEST);
		}
		emailDetails.getBody().addAll(emailList);
		LOGGER.info("getEmailSearch: Final EmailDetailsList {} added to response : UUID ={}",emailList,uuid);
		return emailDetails;
	}

