import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class EmailTypeTest {

    @Test
    public void testFindEmailType_Forwarded() {
        String subject = "Forward: Meeting Agenda";
        String emailMsgStatus = "Pending";

        assertEquals(Constants.EMAIL_MESSAGE_STATUS_FORWARDED, findEmailType(subject, emailMsgStatus));
    }

    @Test
    public void testFindEmailType_Replied() {
        String subject = "Re: Feedback on Proposal";
        String emailMsgStatus = "Pending";

        assertEquals(Constants.EMAIL_MESSAGE_STATUS_REPLIED, findEmailType(subject, emailMsgStatus));
    }

    @Test
    public void testFindEmailType_Default() {
        String subject = "Important Update";
        String emailMsgStatus = "Pending";

        assertEquals("Pending", findEmailType(subject, emailMsgStatus));
    }

    @Test
    public void testFindEmailType_Forwarded_MixedCase() {
        String subject = "FoRwArD: Monthly Report";
        String emailMsgStatus = "Pending";

        assertEquals(Constants.EMAIL_MESSAGE_STATUS_FORWARDED, findEmailType(subject, emailMsgStatus));
    }

    @Test
    public void testFindEmailType_Replied_MixedCase() {
        String subject = "rEpLiEd: Team Discussion";
        String emailMsgStatus = "Pending";

        assertEquals(Constants.EMAIL_MESSAGE_STATUS_REPLIED, findEmailType(subject, emailMsgStatus));
    }

    @Test
    public void testFindEmailType_EmptySubject() {
        String subject = "";
        String emailMsgStatus = "Pending";

        assertEquals("Pending", findEmailType(subject, emailMsgStatus));
    }

    @Test
    public void testFindEmailType_NullSubject() {
        String emailMsgStatus = "Pending";

        assertEquals("Pending", findEmailType(null, emailMsgStatus));
    }

    @Test
    public void testFindEmailType_NullSubjectAndStatus() {
        assertEquals(null, findEmailType(null, null));
    }

    @Test
    public void testFindEmailType_LongSubject() {
        String subject = "!!@#$%^&*() Long subject test: Checking if the subject is too long and still recognized";
        String emailMsgStatus = "Pending";

        assertEquals("Pending", findEmailType(subject, emailMsgStatus));
    }

    // Mocking the Constants class
    private String findEmailType(String subject, String emailMsgStatus) {
        Constants mockedConstants = mock(Constants.class);

        when(mockedConstants.FORWARD).thenReturn("forward");
        when(mockedConstants.REPLIED).thenReturn("replied");

        String emailType;
        if (subject.toLowerCase().startsWith(mockedConstants.FORWARD)) {
            emailType = mockedConstants.EMAIL_MESSAGE_STATUS_FORWARDED;
        } else if (subject.toLowerCase().startsWith(mockedConstants.REPLIED)) {
            emailType = mockedConstants.EMAIL_MESSAGE_STATUS_REPLIED;
        } else {
            emailType = emailMsgStatus;
        }
        return emailType;
    }
}
